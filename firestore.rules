rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    match /users/{userId} {
      function isSignedIn() {
        return request.auth != null;
      }

      function isOwner(userId) {
        return request.auth.uid == userId;
      }

      function isExistingOwner() {
        return isSignedIn() && resource.data.userId == request.auth.uid;
      }

      allow get: if isSignedIn() && isOwner(userId);
      allow list: if false;

      allow create: if isSignedIn() && isOwner(userId) && request.auth.uid == userId;
      allow update: if isSignedIn() && isOwner(userId) && request.auth.uid == userId;
      allow delete: if isSignedIn() && isOwner(userId) && request.auth.uid == userId;
    }

    match /job_posts/{jobPostId} {
      function isSignedIn() {
        return request.auth != null;
      }

      function isOwner(userId) {
        return request.auth.uid == userId;
      }

      function isJobPostOwner(userId) {
          return resource.data.userId == userId;
      }

      function isExistingJobPostOwner() {
        return isSignedIn() && resource.data.userId == request.auth.uid;
      }

      allow get: if true;
      allow list: if true;

      allow create: if isSignedIn() && request.resource.data.postedBy == request.auth.uid;
      allow update: if isSignedIn() && request.resource.data.postedBy == request.auth.uid && resource.data.postedBy == request.auth.uid;
      allow delete: if isSignedIn() && resource.data.postedBy == request.auth.uid;
    }

    match /job_posts/{jobPostId}/bids/{bidId} {
      function isSignedIn() {
        return request.auth != null;
      }

      function isOwner(providerId) {
        return request.auth.uid == providerId;
      }

      function isBidder(providerId) {
        return resource.data.providerId == providerId;
      }

      function isExistingBidOwner() {
          return isSignedIn() && resource.data.providerId == request.auth.uid;
      }

      allow get: if isSignedIn();
      allow list: if isSignedIn();

      allow create: if isSignedIn() && request.resource.data.providerId == request.auth.uid;
      allow update: if isSignedIn() && request.resource.data.providerId == request.auth.uid && resource.data.providerId == request.auth.uid;
      allow delete: if isSignedIn() && resource.data.providerId == request.auth.uid;
    }

    match /payments/{paymentId} {
      function isSignedIn() {
        return request.auth != null;
      }

      allow get: if true;
      allow list: if true;
      allow create, update, delete: if false; 
    }

    match /reviews/{reviewId} {
      function isSignedIn() {
        return request.auth != null;
      }

      allow get: if true;
      allow list: if true;
      allow create, update, delete: if false; 
    }

     match /notifications/{notificationId} {
        function isSignedIn() {
          return request.auth != null;
        }
        allow get: if isSignedIn();
        allow list: if isSignedIn();
        allow create: if false;
        allow update: if false;
        allow delete: if false;
      }
  }
}